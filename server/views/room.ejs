<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <link rel="stylesheet" href="/css/sidebar.css">
    <link rel="stylesheet" href="/css/PlayGround.css">
    <link rel="stylesheet" href="/css/room.css">
    <title>Room</title>
</head>
<body>

<% if(currentUser) { %>

    <%- include('./partials/sidebar') %>


        <div class="main-content">

            <div class="top-bar">

                <form action="/playground" method="get">
                    <button class="nav-button"><i class="fa-solid fa-arrow-right-to-bracket"></i>
                        Leave Room</button>
                </form>

                <div class="more">
                    <i class="fa-solid fa-ellipsis-vertical"></i>
                </div>

            </div>
    
            <div class="room-container">
                <canvas id="whiteboard" width="1000" height="500"></canvas>
                <video id="screenShare" autoplay></video>
                <div class="video-container">
                    <div class="video-box">
                        <div class="vid-username">User 1</div>
                        <video id="user1Video" autoplay></video>
                    </div>
                    <div class="video-box">
                        <div class="vid-username">User 2</div>
                        <!-- <video id="user2Video" autoplay></video> -->
                        <i class="fa-solid fa-video-slash"></i>
                    </div>
                </div>
            </div>
        
            <div class="room-fixed-container">
                <div class="button-container">
                    <button class="room-button" id="whiteboardButton" onclick="toggleWhiteboard()">Whiteboard</button>
                    <button class="room-button" id="screenShareButton" onclick="toggleScreenShare()">Screen Share</button>
                    <button class="room-button" id="clearButton" onclick="clearWhiteboard()" class="broomstick-icon">Clear</button>
                </div>
            </div>

        </div>

        <% } else{ %>
            <p>You are not logged in.</p>
            <% } %>


                <script>
                    
        const whiteboard = document.getElementById("whiteboard");
        const screenShare = document.getElementById("screenShare");
        const whiteboardButton = document.getElementById("whiteboardButton");
        const screenShareButton = document.getElementById("screenShareButton");
        const clearButton = document.getElementById("clearButton");
        const canvas = whiteboard.getContext("2d");
        let isDrawing = false;

        async function setupWebcam(videoElement) {
            try {
                const stream = await navigator.mediaDevices.getUserMedia({ video: true });
                videoElement.srcObject = stream;
            } catch (error) {
                console.error("Error accessing webcam:", error);
            }
        }

        // Setup webcams for user videos
        setupWebcam(document.getElementById("user1Video"));
        setupWebcam(document.getElementById("user2Video"));

        function toggleWhiteboard() {
            whiteboard.style.display = "block";
            screenShare.style.display = "none";
            clearButton.style.display = "block"; // Show clear button when whiteboard is active
        }

        async function toggleScreenShare() {
            try {
                const stream = await navigator.mediaDevices.getDisplayMedia({ video: true });
                screenShare.srcObject = stream;
                whiteboard.style.display = "none";
                screenShare.style.display = "block";
                clearButton.style.display = "none"; // Hide clear button when screen sharing is active
            } catch (error) {
                console.error("Error accessing screen sharing:", error);
            }
        }

        function clearWhiteboard() {
            canvas.clearRect(0, 0, whiteboard.width, whiteboard.height);
        }

        whiteboard.addEventListener("mousedown", (e) => {
            isDrawing = true;
            canvas.lineWidth = 2;
            canvas.strokeStyle = "#000";
            canvas.beginPath();
            canvas.moveTo(e.clientX - whiteboard.getBoundingClientRect().left, e.clientY - whiteboard.getBoundingClientRect().top);
        });

        whiteboard.addEventListener("mousemove", (e) => {
            if (!isDrawing) return;
            canvas.lineTo(e.clientX - whiteboard.getBoundingClientRect().left, e.clientY - whiteboard.getBoundingClientRect().top);
            canvas.stroke();
        });

        whiteboard.addEventListener("mouseup", () => {
            isDrawing = false;
            canvas.closePath();
        });

        whiteboard.addEventListener("mouseleave", () => {
            isDrawing = false;
            canvas.closePath();
        });
                </script>

                <%- include('./partials/footer') %>